#Checking to make sure the total rides and combined data matches
combined_data_len = len(combined_data)
print('Combined Data Length:', combined_data_len)

#check info on dataset columns and column data types
print(combined_data.info())

#convert started_at and ended_at columns from obj to datetime
combined_data['started_at'] = pd.to_datetime(combined_data['started_at'])
print(combined_data.info())

combined_data['ended_at'] = pd.to_datetime(combined_data['ended_at'])
print(combined_data.info())

#added a column for the duration of each ride
combined_data['ride_length'] = combined_data['ended_at'] - combined_data['started_at']

print(combined_data)

#added another column to calculate the day of the week that each ride started
combined_data['day_of_week'] = combined_data['started_at'].dt.weekday +1
print(combined_data)

#calculating the min, max, and avg for the duration of a ride
max_ride_length = combined_data['ride_length'].max()

min_ride_length = combined_data['ride_length'].min()

average_ride_length = combined_data['ride_length'].mean()

most_used_day = combined_data['day_of_week'].mode()[0]

# Map the numeric day to the day of the week
day_name_mapping = {
    1: 'Sunday',
    2: 'Monday',
    3: 'Tuesday',
    4: 'Wednesday',
    5: 'Thursday',
    6: 'Friday',
    7: 'Saturday'}

most_used_day_name = day_name_mapping[most_used_day]

print('Maximum Length of Ride:', max_ride_length)
print('Minimum Length of Ride:', min_ride_length)
print('Average Length of Ride:', average_ride_length)
print('Most Used day of the Week:', most_used_day_name)

#most used day of the week length and avg ride time
friday_count = len(combined_data[combined_data['day_of_week'] == 6])
friday_avg_ride_length = combined_data[combined_data['day_of_week'] == 6].mean()

print('Friday Count:', friday_count)
print('Friday Average Ride Time:', friday_avg_ride_length)

#calculating the average ride length for casual riders and members
average_ride_length = combined_data.groupby('member_casual')['ride_length'].mean().reset_index()

print('Ride length for Riders:',average_ride_length)

average_ride_length_by_day = combined_data.groupby('day_of_week')['ride_length'].mean().reset_index()

average_ride_length_by_day['day_of_week'] = average_ride_length_by_day['day_of_week'].map(day_name_mapping)

print('Riders by Day of the Week:',average_ride_length_by_day)

average_ride_length_by_rider = combined_data.groupby('member_casual')['ride_length'].mean().reset_index()

print('Members and Casual Riders Average:', average_ride_length_by_rider)
